services:
  messaging-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: messaging-app
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - APP_DATABASE_DSN=host=postgres user=postgres password=postgres dbname=messages port=5432 sslmode=disable
      - APP_REDIS_ADDR=redis:6379
      - APP_WEBHOOK_URL=http://wiremock:8080/webhook
      - APP_SCHEDULER_BATCHSIZE=2
      - APP_SCHEDULER_INTERVAL=2m
      - APP_SCHEDULER_ENABLED=true
    depends_on:
      postgres:
          condition: service_healthy
      redis:
        condition: service_healthy
      wiremock:
        condition: service_healthy
    restart: on-failure

  postgres:
    image: postgres:17.0-alpine3.20
    container_name: postgres
    environment:
      POSTGRES_DB: messages
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./data/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  wiremock:
    image: wiremock/wiremock:3.13.0
    container_name: wiremock
    ports:
      - "8089:8080"
    volumes:
      - ./data/wiremock:/home/wiremock
    command: --global-response-templating
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/__admin" ]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  pgdata:
  redisdata: