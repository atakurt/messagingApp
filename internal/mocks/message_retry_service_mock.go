// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMessageRetryServiceInterface is a mock of MessageRetryServiceInterface interface.
type MockMessageRetryServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageRetryServiceInterfaceMockRecorder
}

// MockMessageRetryServiceInterfaceMockRecorder is the mock recorder for MockMessageRetryServiceInterface.
type MockMessageRetryServiceInterfaceMockRecorder struct {
	mock *MockMessageRetryServiceInterface
}

// NewMockMessageRetryServiceInterface creates a new mock instance.
func NewMockMessageRetryServiceInterface(ctrl *gomock.Controller) *MockMessageRetryServiceInterface {
	mock := &MockMessageRetryServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMessageRetryServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageRetryServiceInterface) EXPECT() *MockMessageRetryServiceInterfaceMockRecorder {
	return m.recorder
}

// ProcessMessageRetries mocks base method.
func (m *MockMessageRetryServiceInterface) ProcessMessageRetries(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessMessageRetries", ctx)
}

// ProcessMessageRetries indicates an expected call of ProcessMessageRetries.
func (mr *MockMessageRetryServiceInterfaceMockRecorder) ProcessMessageRetries(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessMessageRetries", reflect.TypeOf((*MockMessageRetryServiceInterface)(nil).ProcessMessageRetries), ctx)
}
