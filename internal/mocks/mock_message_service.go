// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/atakurt/messagingApp/internal/features/sendmessages (interfaces: MessageServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMessageServiceInterface is a mock of MessageServiceInterface interface.
type MockMessageServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageServiceInterfaceMockRecorder
}

// MockMessageServiceInterfaceMockRecorder is the mock recorder for MockMessageServiceInterface.
type MockMessageServiceInterfaceMockRecorder struct {
	mock *MockMessageServiceInterface
}

// NewMockMessageServiceInterface creates a new mock instance.
func NewMockMessageServiceInterface(ctrl *gomock.Controller) *MockMessageServiceInterface {
	mock := &MockMessageServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMessageServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageServiceInterface) EXPECT() *MockMessageServiceInterfaceMockRecorder {
	return m.recorder
}

// ProcessUnsentMessages mocks base method.
func (m *MockMessageServiceInterface) ProcessUnsentMessages(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessUnsentMessages", arg0)
}

// ProcessUnsentMessages indicates an expected call of ProcessUnsentMessages.
func (mr *MockMessageServiceInterfaceMockRecorder) ProcessUnsentMessages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessUnsentMessages", reflect.TypeOf((*MockMessageServiceInterface)(nil).ProcessUnsentMessages), arg0)
}
